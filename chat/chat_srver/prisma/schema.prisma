// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId          Int             @id @default(autoincrement())
 // chat 
  chatrooms       Chatroom[]      @relation("ChatroomUsers")
  messages        Message[]
  ChatroomUsers   ChatroomUsers[]
}


model Message {
  msgId         Int      @id @default(autoincrement())
  msgContent    String
  userSenderId     Int
  chatroomId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  chatroom   Chatroom @relation(fields: [chatroomId], references: [id], onDelete: Cascade)
}

model chatDms {
  chatDmId         Int      @id @default(autoincrement())
  msgContent    String
  userSenderId     Int
  userReceiverId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Message  Message[] @relation(fields: [msgId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Chatroom {
  roomId            Int             @id @default(autoincrement())
  name          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  users         User[]          @relation("ChatroomUsers")
  messages      Message[]
  ChatroomUsers ChatroomUsers[]
}

model ChatroomUsers {
  chatroomId Int
  userId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  chatroom   Chatroom @relation(fields: [chatroomId], references: [id], onDelete: Cascade)

  @@id([chatroomId, userId])
}